
services:

  rabbitmq-service:
    image: 'rabbitmq:3.8-management'
    build: 
      context: ./rabbitmq-service    # Directorio donde está el Dockerfile de RabbitMQ
    container_name: rabbitmq-service  # Nombre del Contenedor de servicio RabbitMQ
    env_file:
      - ./rabbitmq-service./config/rabbitmq.env # Carga las variables de entorno específicas de RabbitMQ
    volumes:
      - ./rabbitmq-service./config/rabbitmq.env:/etc/rabbitmq/rabbitmq.env # Monta el archivo rabbitmq.env en un volúmen
    environment:
      - RABBITMQ_LOGS=/var/log/rabbitmq/rabbit.log
    ports:
      - 5672:5672             # Puerto de mensajeria
      - 15672:15672           # Interfaz de administración
    networks:
      - backend_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5

  simulator-service:
    build:
      context: ./simulator-service    # Directorio donde está el Dockerfile del servicio de simulación
    container_name: simulator-service # Nombre del Contenedor de servicio del simulador C++
    depends_on:
      - rabbitmq-service
    env_file:
      - /app/rabbitmq.env             # Se accede al rabbitmq.env montado en el volumen
    networks:
      - backend_network
  
  mongodb-service:
    image: mongodb-atlas-local:latest
    build:
      context: ./mongodb-service              # Directorio donde está el Dockerfile del servicio de base de datos MongoDB
    container_name: mongodb-service           # Nombre del contenedor de servicios de base de datos MongoDB
    env_file:
      - ./mongodb-service./config/mongodb.env #Carga las variables de entorno específicas de MongoDB
    environment:
      - MONGO_URL=mongodb://mongo:27017/      # Establece la variable de entorno con la URL de conexión para acceder a la interfaz web de Mongo Express
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - ./data/mongo:/data/db:delegated       # Establece "delegated" priorizando la escritura en el contenedor sobre la sincronización con el host
    ports:
      - 27018:27017                             # Mapeo del puerto 8081 del host al puerto 8081 del contenedor de servicios mongodb-service
    networks:
      - backend_network
  
  apigateway-service:
    build:
      context: ./apigateway-service
    container_name: apigateway-service
    env_file:
      - ./apigateway-service./config/apigateway.env
    ports:
      -5000:5000
    networks:
      -backend_network

networks:
  backend_network:
    driver: bridge